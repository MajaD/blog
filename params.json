{"name":"Blog","tagline":"","body":"<img src=\"http://gifs.gifbin.com/122011/1326398199_lemur_om_nom_nom.gif\" align=\"right\" />\r\n# Witaj na mojej stronie na GitHub.io\r\nTutaj znajdziesz kilka podstawowych pojęć ze środowiska programisty i programowania w języku C, a w późniejszym czasie także w innych językach programistycznych. W miarę możliwości strona ta będzie uzupełniana. Serdecznie zapraszam :)\r\n***\r\n```\r\n  Ślepota przychodzi z czasem, \r\n  z głupotą trzeba się urodzić.\r\n```\r\n***\r\n***\r\n# O mnie.\r\nMam na imię Maja. Jestem studentką pierwszego roku Informatyki Uniwersytetu Gdańskiego wydziału Matematyki, Fizyki i Informatyki. Interesuję się programowaniem i grafiką komputerową, a także podróżami.\r\n***\r\n***\r\n## Link do repozytorium.\r\n<img src=http://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/GitHub.svg/567px-GitHub.svg.png />\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n###[ Moje repozytorium ] (https://github.com/MajaD?tab=repositories)\r\n***\r\n***\r\n# Egrep.\r\n<img src=\"http://nbjl.nankai.edu.cn/~mayong/UNIX.Shells.by.Example.3rd.Edition/ch03.gif\" align=\"center\" />\r\n***\r\n<dfn> _**\"Wyrażenia regularne\"**_ </dfn>to w informatyce teoretycznej ciągi znaków pozwalające opisywać języki regularne. W praktyce znalazły bardzo szerokie zastosowanie, pozwalają bowiem w łatwy sposób opisywać wzorce tekstu, natomiast istniejące algorytmy w efektywny sposób określają, czy podany ciąg znaków pasuje do wzorca lub wyszukują w tekście wystąpienia wzorca. Wyrażenia regularne w praktycznych zastosowaniach są zapisywane za pomocą bogatszej i łatwiejszej w użyciu składni niż ta stosowana w rozważaniach teoretycznych.\r\n</div>\r\n***\r\n<div align=\"center\">\r\n<table>\r\n<tr>\r\nMINI ŚCIĄGAWKA\r\n</tr>\r\n<tr>\r\n\t<td>Symbol</td>\t<td>Objaśnienie</td>\r\n</tr>\r\n<tr>\r\n\t<td>*</td>\t<td>zero lub więcej</td>\r\n</tr>\r\n<tr>\r\n\t<td>+</td>\t<td>jeden lub więcej</td>\r\n</tr>\r\n<tr>\r\n\t<td>?</td>\t<td>zero lub jeden</td>\r\n</tr>\r\n<tr>\r\n\t<td>{3}</td>\t<td>trzy</td>\r\n</tr>\r\n<tr>\r\n\t<td>{3,}</td>\t<td>trzy lub więcej</td>\r\n</tr>\r\n<tr>\r\n\t<td>{3,5}</td>\t<td>trzy, cztery lub pięć</td>\r\n</tr><tr>\r\n\t<td>^ lub \\A</td>\t<td>początek ciągu znaków</td>\r\n</tr>\r\n<tr>\r\n\t<td>$ lub \\Z</td>\t<td>koniec ciągu znaków</td>\r\n</tr>\r\n<tr>\r\n\t<td>.</td>\t<td>każdy znak oprócz znaku nowej linii</td>\r\n</tr>\r\n<tr>\r\n\t<td>(a|b)</td>\t<td>a lub b</td>\r\n</tr>\r\n<tr>\r\n\t<td>(...)</td>\t<td>grupa znaków</td>\r\n</tr>\r\n<tr>\r\n\t<td>[abc]</td>\t<td>zakres a lub b lub c</td>\r\n</tr>\r\n<tr>\r\n\t<td>[^abc]</td>\t<td>zakres nie a lub b lub c</td>\r\n</tr>\r\n<tr>\r\n\t<td>[a-q]</td>\t<td>zakres małe a do małe q</td>\r\n</tr>\r\n<tr>\r\n\t<td>[A-Q]</td>\t<td>zakres wielkie A do wielkie Q</td>\r\n</tr>\r\n<tr>\r\n\t<td>[0-7]</td>\t<td>liczby 0 do 7</td>\r\n</tr>\r\n<tr>\r\n\t<td>\\> </td>\t<td>koniec słowa</td>\r\n</tr>\r\n</table>\r\n</div>\r\n***\r\n##Przykładowe zadania.\r\n```\r\n1. Wyszukaj imię Artur w pliku \"plik\".\r\n2. Wyszukaj w pliku \"plik\" wiersze zawierające ciąg znaków w postaci: x, dowolny znak, y.\r\n3. Przeszukaj plik \"plik\" by znalazł wiersz zawierający słowo \"lody\".\r\n4. Znajdź linię w pliku \"plik\" zawierającą literę a lub b.\r\n5. Znajdź w pliku \"plik\" wiersze zawierające cyfry.\r\n```\r\n***\r\n### Odpowiedzi.\r\n***\r\n```\r\n1. grep Artur plik\r\n2. grep 'x.y' plik\r\n3. grep \"lody\" plik\r\n4. grep '[ab]' plik\r\n5. grep \"[0-9]\" plik\r\n```\r\n***\r\n***\r\n# Markdown.\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n###[Kliknij](http://joncom.be/experiments/markdown-editor/edit/) i przećwicz notację Markdown online.\r\n***\r\n_**Mój przykład.**_\r\n<img src=\"https://dl-web.dropbox.com/get/markdown.png?_subject_uid=255724021&w=AADuSfjR346P-v3_zPgSWxSyubHb0TX2-6zZabtzZViAVg\" />\r\n***\r\n<div align=\"center\">\r\nSKŁADNIA\r\n</div>\r\n<div align=\"center\">\r\n<table>\r\n<tr>\r\n\t<td><div align\"center\">Kod</div></td>\t<td><div>Objaśnienie</div></td>\r\n</tr>\r\n<tr>\r\n<td>*wyraz*</td>\r\n<td>kursywa</td>\r\n</tr>\r\n<tr>\r\n<td>**wyraz**</td>\r\n<td>pogrubienie</td>\r\n</tr>\r\n<tr>\r\n<td>`wyraz`</td>\r\n<td>kod</td>\r\n</tr>\r\n<tr>\r\n<td>*pierwszy el<p>*drugi el</p></td>\r\n<td>punktory</td>\r\n</tr>\r\n<tr>\r\n<td>>wyraz</td>\r\n<td>cytat</td>\r\n</tr>\r\n<tr>\r\n<td>[blog](majad.github.io/blog)</td>\r\n<td>link</td>\r\n</tr>\r\n<tr>\r\n<td>!(http://upload.wikimedia.org/\r\n<p>wikipedia/commons/thumb/1/1b/</p>Mars.jpg/160px-Mars.jpg)</td>\r\n<td>obrazek</td>\r\n</tr>\r\n</table>\r\n</div>\r\n***\r\n***\r\n# Latex.\r\n<img src=https://dl-web.dropbox.com/get/latex_resul-page-0.jpg?w=AADC1eXT5sKkkldI5QO0Ybj2QDl7wwCVbpCOHFnLx3XKIg&_subject_uid=255724021 />\r\n\r\n***\r\n<img src=https://dl-web.dropbox.com/get/latex_resul-page-1.jpg?w=AABSoNhHnPWmDOqsdxBu-7sXF8rtYvJmJO5bexRy6P6JJQ&_subject_uid=255724021 />\r\n***\r\n<img src=https://dl-web.dropbox.com/get/page-1.jpg?w=AABuzd66lHoz4ZErc_a7nSLy0xj9h4PR78ikdCZseWgVlA&_subject_uid=255724021 />\r\n***\r\n<img src=https://dl-web.dropbox.com/get/page-2.jpg?w=AACUsjs1IAv2moZIFoMpBBwW4JhgrR89mvp03cjjMiDAXA&_subject_uid=255724021 />\r\n***\r\n<img src=https://dl-web.dropbox.com/get/page-3.jpg?w=AABYsA5y8mkZvueDQdebn_oREk_7qmmLp-jdCoOz9t6VYQ&_subject_uid=255724021 />\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n###[Latex - kod] (https://github.com/MajaD/latex/blob/master/README.md)\r\n***\r\n***\r\n# Skrypty.\r\n<img src=http://pcarena.pl/poradniki/uploads/files/marek_glijer/atrykuly/Linux-dla-humanistow/code-net.jpg />\r\n***\r\nHello world\r\n***\r\n```bash\r\n  #!/bin/bash\r\n\r\n  echo \"Hello world\"\r\n```\r\n***\r\nGdzie i kim jestem\r\n***\r\n```bash\r\n  #!/bin/bash\r\n\r\n  GDZIE_JESTEM=`pwd`\r\n  KIM_JESTEM=`whoami`\r\n  echo \"Nazywam sie $KIM_JESTEM i przebywam w katalogu $GDZIE_JESTEM\"\r\n```\r\n***\r\nParametry\r\n***\r\n```bash\r\n  #!/bin/bash\r\n  echo \"Nazwa skryptu to: $0\"\r\n  echo '------------------------------------'\r\n  echo \"Nazwa pierwszego argumentu to: $1\"\r\n  echo '------------------------------------'\r\n  echo \"Wszystkie argumenty: $*\"\r\n  echo '------------------------------------'\r\n  echo \"Podałeś $# poleceń\"\r\n```\r\n***\r\nDane\r\n***\r\n```bash\r\n  #!/bin/bash\r\n  echo 'Jak masz na imię?'\r\n  read zmienna\r\n  echo \"Twoje imie to: $zmienna\"\r\n```\r\n***\r\nWizytówka\r\n***\r\n```bash\r\n  #!/bin/bash\r\n  echo 'Wizytowka'\r\n  echo '#####################################'\r\n  echo 'Program poprosi cię o wpisanie różnych danych.'\r\n  echo 'Po wpisaniu wciśnij Enter by przejść dalej.'\r\n  echo '#####################################'\r\n  echo 'Podaj swoje Imię i Nazwisko:'\r\n  read name\r\n  echo 'Podaj swój adres E-Mail:'\r\n  read mail\r\n  echo 'Podaj numer Gadu-Gadu:'\r\n  read gg\r\n  echo '#####################################'\r\n  echo 'Pobieranie danych zakończone'\r\n  touch wizytowka.txt\r\n  echo \"$name\" >> wizytowka.txt\r\n  echo \"Email: $mail\" >> wizytowka.txt\r\n  echo \"Gadu-Gadu $gg\" >> wizytowka.txt\r\n  echo 'Generowanie wizytówki zakończone'\r\n  echo 'Plik wizytowka.txt gotowy!'\r\n  echo '#####################################'\r\n```\r\n***\r\n## Link do skryptów\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n###[Skrypty] (https://github.com/MajaD/skrypty)\r\n***\r\n***\r\n# Programy.\r\n<img src=http://pcarena.pl/poradniki/uploads/files/marek_glijer/atrykuly/Linux-dla-humanistow/omg-laptop.jpg />\r\n***\r\nWypisywanie tablicy dwuwymiarowej\r\n***\r\n```c\r\n  #include<stdio.h>\r\n  int main()\r\n  {\r\n        int tab[4][4];\r\n        int a,b,c;\r\n        c=1;\r\n        printf(\"podaj 16 liczb tablicy: \\n\");\r\n        for(a=0;a<4;a++)\r\n        {\r\n                for(b=0;b<4;b++)\r\n                {\r\n                        printf(\"liczba %3d: \", c);\r\n                        scanf(\"%d\", &tab[a][b]);\r\n                        c++;\r\n                }\r\n                \r\n        }\r\n        printf(\"\\n tablica wypisana kolejno wierszami: \\n\");\r\n        for(a=0;a<4;a++)\r\n        {\r\n                for(b=0;b<4;b++)\r\n                {\r\n                        printf(\"%3d\", tab[a][b]);\r\n                }\r\n                printf(\"\\n\");\r\n        }\r\n        printf(\"\\ntablica wypisana kolejno kolumnami: \\n\");\r\n        for(b=0;b<4;b++)\r\n        {\r\n                for(a=0;a<4;a++)\r\n                {\r\n                        printf(\"%3d\", tab[a][b]);\r\n                }\r\n                printf(\"\\n\");\r\n        }\r\n        \r\n  }\r\n```\r\n***\r\nSzyfr\r\n***\r\n```c\r\n  #include<stdio.h>\r\n\r\n  int main() {\r\n    char klucz [27];\r\n    char z;\r\n    int n;\r\n\r\n  // Klucz szyfru:\r\n  klucz[ 0] = '0'; klucz[ 9] = 'w'; klucz[18] = 'k';\r\n  klucz[ 1] = 'i'; klucz[10] = 'y'; klucz[19] = 'r';\r\n  klucz[ 2] = 'n'; klucz[11] = 'c'; klucz[20] = 'j';\r\n  klucz[ 3] = 'h'; klucz[12] = ' '; klucz[21] = 'u';\r\n  klucz[ 4] = 'm'; klucz[13] = 'b'; klucz[22] = 'd';\r\n  klucz[ 5] = 't'; klucz[14] = 'q'; klucz[23] = 'g';\r\n  klucz[ 6] = 'p'; klucz[15] = 'x'; klucz[24] = 'o';\r\n  klucz[ 7] = 'a'; klucz[16] = 'e'; klucz[25] = 'f';\r\n  klucz[ 8] = 'l'; klucz[17] = 'v'; klucz[26] = 'z';\r\n\r\n  z = getchar();\r\n  while (z != EOF) {\r\n\r\n   // znaleźć w tablicy klucz wczytany znak z :\r\n    n=0;\r\n    while (n<27 && klucz[n] != z) n=n+1;\r\n\r\n   // wydrukować odpowiadający mu indeks tablicy:\r\n    if (n<27) printf(\"%i \", n);\r\n\r\n   // wczytać nowy znak:\r\n    z = getchar();\r\n  }\r\n\r\n  // zakończyć wydruk:\r\n  printf(\"-1\\n\");\r\n\r\n  return 0;\r\n  }\r\n```\r\n***\r\nSilnia (funkcja)\r\n***\r\n```c\r\n  #include<stdio.h>\r\n  int s;\r\n  int silnia(int n)\r\n  {\r\n        if(n==0) s=1;\r\n        else\r\n        {\r\n                silnia(n-1); s=s*n;\r\n        }\r\n  }\r\n  int main()\r\n  {\r\n  int n;\r\n  printf(\"podaj liczbe: \");\r\n  scanf(\"%d\", &n);\r\n  silnia(n);\r\n  printf(\"silnia wynosi: %3d\", s);        \r\n  }\r\n```\r\n***\r\nAutomat komórkowy\r\n***\r\n```c\r\n  #include<stdio.h>\r\n  int main()\r\n  {\r\n        int tab1[1000];\r\n        int tab2[1000];\r\n        int a,b,c,ilejed,dl,krok,jed,indeks,pom;\r\n        pom=1;\r\n        printf(\"podaj dlugosc tablicy: \\n\");\r\n        scanf(\"%d\",&dl);\r\n        \r\n        for(a=0;a<dl+2;a++)\r\n        {\r\n        tab1[a]=0;\r\n        tab2[a]=0;        \r\n        }\r\n        \r\n        printf(\"podaj ilosc jedynek wystepujących w tablicy: \\n\");\r\n        scanf(\"%d\",&ilejed);\r\n        printf(\"podaj nr pol tablicy ktore maja byc jedynkami: (od 1 do %d)\\n\",dl);\r\n        \r\n        \r\n        for(a=0;a<ilejed;a++)\r\n        {\r\n                scanf(\"%d\", &indeks);\r\n                tab1[indeks]=1;\r\n        }\r\n        \r\n        printf(\"podaj liczbe krokow ewolucji: \\n\");\r\n        scanf(\"%d\", &krok);\r\n        \r\n        for(a=0;a<krok;a++)\r\n        {\r\n                \r\n        if(pom%2==1)\r\n        {\r\n                for(b=1;b<dl+1;b++)\r\n                {\r\n                printf(\"%2d\", tab1[b]);\r\n                }\r\n                        \r\n                        for(c=1;c<dl+1;c++)\r\n                        {\r\n                                if((tab1[c-1]+tab1[c]+tab1[c+1])%2==0)\r\n                                {\r\n                                tab2[c]=0;\r\n                                }\r\n                                else\r\n                                {\r\n                                tab2[c]=1;\r\n                                }\r\n                        }\r\n        }\r\n        \r\n        else\r\n        {\r\n                for(b=1;b<dl+1;b++)\r\n                {\r\n                        printf(\"%2d\", tab2[b]);\r\n                }\r\n                \r\n                        for(c=1;c<dl+2;c++)\r\n                        {\r\n                                if((tab2[c-1]+tab2[c]+tab2[c+1])%2==0)\r\n                                {\r\n                                tab1[c]=0;\r\n                                }\r\n                                else\r\n                                {\r\n                                tab1[c]=1;\r\n                                }\r\n                        }\r\n        }\r\n        \r\n        pom=pom+1;\r\n        printf(\"\\n\");                \r\n        }\r\n  }\r\n```\r\n***\r\nPiramida\r\n***\r\n```c\r\n  #include<stdio.h>\r\n  int main()\r\n  {\r\n   int num,r,c,sp,i=1;\r\n   printf(\"Podaj liczbe : \");\r\n   scanf(\"%d\", &num);\r\n   for(r=1; r<=num; r++)\r\n   {\r\n    for(sp=1; sp<=num-r; sp++)\r\n    printf(\" \");\r\n     for(c=1; c<=r; c++,i++)\r\n    printf(\"%d \",i);\r\n   printf(\"\\n\");\r\n   }\r\n   return 0;\r\n  }\r\n```\r\n***\r\nMnożenie macierzy kwadratowej\r\n***\r\n```c\r\n #include\r\n  int main()\r\n\r\n    {\r\n    int tab1[25][25];\r\n    int tab2[25][25];\r\n    int tab3[25][25];\r\n    int a,b,c,w,z,x,v,n,pomoc;\r\n    c=1;\r\n    printf(\"podaj wielkosc macierzy kwadratowej: \\n\");\r\n    scanf(\"%d\", &w);\r\n    printf(\"podaj liczby pierwszej macierzy: \\n\");\r\n    for(a=0;a<w;a++)\r\n    {\r\n    for(b=0;b<w;b++)\r\n    {\r\n    printf(\"liczba %3d: \", c);\r\n    scanf(\"%d\", &tab1[a][b]);\r\n    c++;\r\n    }\r\n    }\r\n    printf(\"podaj liczby drugiej macierzy: \\n\");\r\n    c=1;\r\n    for(a=0;a<w;a++)\r\n    {\r\n    for(b=0;b<w;b++)\r\n    {\r\n    printf(\"liczba %3d: \", c);\r\n    scanf(\"%d\", &tab2[a][b]);\r\n    c++;\r\n    }\r\n\r\n    }\r\n    for(x=0;x<w;x++)\r\n    {\r\n    for(z=0;z<w;z++)\r\n    {\r\n    a=0;\r\n    b=0;\r\n    pomoc=0;\r\n    while (a<w && b<w)\r\n    {\r\n    pomoc=((tab1[x][b]*tab2[a][z]) + pomoc);\r\n    b=b+1;\r\n    a=a+1;\r\n    }\r\n    tab3[x][z]=pomoc;\r\n    }\r\n    }\r\n    n=0;\r\n    v=w/2;\r\n    for(a=0;a<w;a++)\r\n    {\r\n    for(b=0;b<w;b++)\r\n    {\r\n    printf(\"%3d\", tab1[a][b]);\r\n    }\r\n    if(n==v)\r\n    {\r\n    printf(\" * \");\r\n    }\r\n    else\r\n    {\r\n    printf(\" \");\r\n    }\r\n    for(b=0;b<w;b++)\r\n    {\r\n    printf(\"%3d\", tab2[a][b]);\r\n    }\r\n    if(n==v)\r\n    {\r\n    printf(\" = \");\r\n    }\r\n    else\r\n    {\r\n    printf(\" \");\r\n    }\r\n    for(b=0;b<w;b++)\r\n    {\r\n    printf(\"%3d\", tab3[a][b]);\r\n    }\r\n    printf(\"\\n\");\r\n    n=n+1;\r\n    }\r\n    }\r\n```\r\n***\r\nliczba e\r\n***\r\n```c\r\n  #include<stdio.h>\r\n  int main ()\r\n  {\r\n        float approx, skl,f;\r\n        int k,n,o;\r\n        k=0;\r\n        o=1;\r\n        approx=1;\r\n        skl=1;\r\n        printf(\"podaj liczbe: \");\r\n        scanf(\"%d\", &n);\r\n        while(k<=n)\r\n        {\r\n                k=k+1;        \r\n                o=o*k;\r\n                f=skl/o;\r\n                approx=f+approx;\r\n        \r\n        }\r\n        printf(\"%.100f\",approx);\r\n                \r\n  }\r\n```\r\n***\r\nWarunek\r\n***\r\n```c\r\n  //Najwieksza liczba spełniająca warunek '1^2+2^2+3^2+...+n^2<N'\r\n  #include<stdio.h>\r\n  int main()\r\n  {\r\n        int n,a,suma,potega;\r\n        suma=0;\r\n        a=0;\r\n        \r\n        printf(\"podaj liczbe: \\n\");\r\n        scanf(\"%d\",&n);\r\n        \r\n        while(suma<n)\r\n        {\r\n                a++;\r\n                potega=0;\r\n                potega=a*a;\r\n                suma=suma+potega;\r\n        }\r\n        printf(\"najwieksza liczba spelniajaca\");\r\n        printf(\"warunek '1^2+2^2+3^2+...+n^2<N' to: %3d\\n\",a-1);\r\n  }\r\n```\r\n***\r\n## Link do programów.\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n###[Programy] (https://github.com/MajaD/programiki)\r\n***\r\n***\r\n# Kontakt.\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n### <a href=\"mailto:Dark-Angel93@wp.pl\">Kliknij</a> i napisz do mnie :)\r\n***\r\n***\r\n# Pomoc.\r\n<img src=http://i1.kwejk.pl/site_media/obrazki/2014/01/d65012a6d3cf71e427bc2b20b945074b_original.gif?1389375964 />\r\n***\r\n<img src=\"http://www.biorevitalis.pl/images/strzalka2.png\" align=\"left\" />\r\n### http://help.github.com/ lub support@github.com.\r\n***\r\n***\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}